name: Architecture Scan
on: 
  push:
  pull_request:
permissions:
  contents: read
  pull-requests: write
  issues: write
jobs:
  arch-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.11' }
      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run archscan
        run: |
          python archscan.py --repo . --out afm.json --diagram diagrams/landscape.mmd
      - name: Validate AFM
        run: |
          python validate_afm.py --afm afm.json --schema afm_schema.json --allowlist config/allowed_issuers.txt
      - name: Semgrep (non-blocking)
        run: |
          python -m pip install semgrep
          semgrep --config rules/oauth-semgrep.yml --json -o semgrep.json || true
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: architecture-landscape
          path: |
            afm.json
            diagrams/*
            semgrep.json
      - name: PR comment with diagram
        if: ${{ github.event_name == 'pull_request' || github.event_name == 'pull_request_target' }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');

            function read(path) {
              try { return fs.readFileSync(path, 'utf8'); } catch { return ''; }
            }

            const diagram = read('diagrams/landscape.mmd');   // Mermaid text
            let afm = {};
            try { afm = JSON.parse(read('afm.json') || '{}'); } catch {}

            const fence = '```';
            const md = [
              '### Architecture Landscape (auto-generated)',
              '',
              diagram ? fence + 'mermaid' + '\n' + diagram + '\n' + fence : '_No diagram_',
              '',
              '<details><summary>AFM JSON</summary>',
              '',
              fence + 'json',
              JSON.stringify(afm, null, 2),
              fence,
              '</details>'
            ].join('\n');

            const issue_number = context.payload.pull_request.number;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number,
              body: md
            });

